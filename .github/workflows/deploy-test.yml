name: 🚀 Test & Deploy to GCP (on main merge)

on:
  push:
    branches:
      - main

jobs:
  test-build-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 소스 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2️⃣ JDK 21 설정
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # 3️⃣ Gradle 캐시 (속도 향상)
      - name: Cache Gradle packages
        uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      # 4️⃣ Gradle 테스트
      - name: Run Gradle tests
        run: |
          chmod +x ./gradlew
          ./gradlew clean :main-server:test --no-daemon

      # 5️⃣ Docker Hub 로그인
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # -----------------------------
      # 6️⃣ Docker 이미지 빌드 및 푸시
      # -----------------------------
      - name: Build and Push Docker image
        run: |
          docker buildx create --use
          docker buildx build \
            --platform linux/amd64,linux/arm64 \
            -t yeongo05/beta-app:latest \
            -f ./main-server/Dockerfile . \
            --push

      # 7️⃣ GCP VM SSH 배포
      - name: Deploy to GCP VM
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.GCP_HOST }}
          username: ${{ secrets.GCP_USERNAME }}
          key: ${{ secrets.GCP_SSH_KEY }}
          script: |
            cd /home/youngoh0408/app/beta
            sudo docker stop beta-app || true
            sudo docker rm beta-app || true
            sudo docker pull yeongo05/beta-app:latest
            sudo docker compose up -d
